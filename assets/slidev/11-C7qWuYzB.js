import{I as n,_ as r}from"./default-BhSlB2tE.js";import{o as d,c as o,k as e,l as a,m as h,q as p,s as g,A as l,e as s,a6 as i}from"../modules/vue-BvTVgwbe.js";import{_ as c,ag as k}from"../index-Cb7Z1AMe.js";import{p as y,u,f as A}from"./context-BZEcEDxK.js";import"../modules/unplugin-icons-jgwa9rXa.js";import"../modules/shiki-TVi2KByD.js";const B=s("h1",null,"Guards",-1),_=s("p",null,[i("Guards are a way of testing whether some properties of a value are true or false."),s("br"),i(" They are every similar to "),s("em",null,"if statements"),i(", but guards are a lot more readable when there are several conditions and they play nicely with patterns.")],-1),f=s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[s("code",{class:"language-hs"},[s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}},"isOdd x")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"	|"),s("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}}," x "),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"`"),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"mod"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"`"),s("span",{style:{"--shiki-dark":"#4C9A91","--shiki-light":"#2F798A"}}," 2"),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," =="),s("span",{style:{"--shiki-dark":"#4C9A91","--shiki-light":"#2F798A"}}," 0"),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," ="),s("span",{style:{"--shiki-dark":"#C98A7D99","--shiki-light":"#B5695999"}},' "'),s("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}},"Even"),s("span",{style:{"--shiki-dark":"#C98A7D99","--shiki-light":"#B5695999"}},'"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"	|"),s("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}}," otherwise "),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"="),s("span",{style:{"--shiki-dark":"#C98A7D99","--shiki-light":"#B5695999"}},' "'),s("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}},"Odd"),s("span",{style:{"--shiki-dark":"#C98A7D99","--shiki-light":"#B5695999"}},'"')])])],-1),m=s("p",null,[i("The "),s("code",null,"otherwise"),i(" keyword is a catch-all pattern that is evaluated if no other guards are true.")],-1),C=s("p",null,[i("Using "),s("em",null,"if statements"),i(", the same function would look like this:")],-1),D=s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[s("code",{class:"language-hs"},[s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}},"isOdd x "),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"="),s("span",{style:{"--shiki-dark":"#4D9375","--shiki-light":"#1E754F"}}," if"),s("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}}," x "),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"`"),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"mod"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"`"),s("span",{style:{"--shiki-dark":"#4C9A91","--shiki-light":"#2F798A"}}," 2"),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," =="),s("span",{style:{"--shiki-dark":"#4C9A91","--shiki-light":"#2F798A"}}," 0")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#4D9375","--shiki-light":"#1E754F"}},"	then"),s("span",{style:{"--shiki-dark":"#C98A7D99","--shiki-light":"#B5695999"}},' "'),s("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}},"Even"),s("span",{style:{"--shiki-dark":"#C98A7D99","--shiki-light":"#B5695999"}},'"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#4D9375","--shiki-light":"#1E754F"}},"	else"),s("span",{style:{"--shiki-dark":"#C98A7D99","--shiki-light":"#B5695999"}},' "'),s("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}},"Odd"),s("span",{style:{"--shiki-dark":"#C98A7D99","--shiki-light":"#B5695999"}},'"')])])],-1),v=s("p",null,[s("strong",null,"Note:"),i(" Wrapping a function name in backticks allows it to be used as an infix operator. So, here, "),s("code",null,"x `mod` 2"),i(" is equivalent to "),s("code",null,"mod x 2"),i(".")],-1),E={__name:"11",setup(x){return y(k),u(),(b,w)=>{const t=r;return d(),o(n,p(g(l(A)(l(k),10))),{default:e(()=>[B,_,a(t,h({},{ranges:[]}),{default:e(()=>[f]),_:1},16),m,C,a(t,h({},{ranges:[]}),{default:e(()=>[D]),_:1},16),v]),_:1},16)}}},q=c(E,[["__file","/@slidev/slides/11.md"]]);export{q as default};
